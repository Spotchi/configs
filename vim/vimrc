" Use Vim settings, rather then Vi settings. This setting must be as early as
" possible, as it has side effects.
set nocompatible
filetype off                  " required

" Following 2 lines make vim load .vimrc from working directory for project-specific configuration
" and restricts usage of some commands
set exrc
set secure

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" Language specific plugins
" Melting pot of languages
Plugin 'sheerun/vim-polyglot'
let g:python_highlight_all = 1

Plugin 'JamshedVesuna/vim-markdown-preview'
let vim_markdown_preview_github=1
let g:vim_markdown_math=1
let conceallevel=2


" Generic auto-complete
Plugin 'Valloric/YouCompleteMe'

" File browsing
Plugin 'scrooloose/nerdtree'

" Verb Plugins
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'


" Airline theme
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" A color scheme
Plugin 'joshdick/onedark.vim'
Plugin 'godlygeek/tabular'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Start NERDTree when Vim starts
" autocmd vimenter * NERDTree
" autocmd VimEnter * wincmd p

"
" Searching
"
set ignorecase " case insensitive searching
set smartcase " case-sensitive if expresson contains a capital letter
set hlsearch " highlight search results
" <C-L> in normal mode to clear 
if maparg('<C-L>', 'n') ==# ''
    nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>
endif

set incsearch " set incremental search, like modern browsers
set nolazyredraw " don't redraw while executing macros

"
" Editing comfort
"
set ts=4
set sts=4
set sw=4
set smarttab
set expandtab

" Auto-indent when using <Enter>
set autoindent

" syntax highlighting
syntax on

" Loading/saving policy
" No swap file
set noswapfile    " http://robots.thoughtbot.com/post/18739402579/global-gitignore#comment-458413287
set autoread      " Reload files changed outside vim
"
" Appearance
"
set ruler         " show the cursor position all the time
set showcmd       " display incomplete command
" show the line numbers
set number
set numberwidth=7

" set number relativenumber
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END " https://jeffkreeftmeijer.com/vim-number/


" Make it obvious where 100 characters is
set textwidth=100
" set formatoptions=cq
set formatoptions=qrn1
set wrapmargin=0
set colorcolumn=+1

set guifont=Inconsolata\ for\ Powerline:h24



"Allow usage of mouse in iTerm
set ttyfast
set mouse=a


" Map Ctrl-j to Ctrl-w then j (for fast window switching)
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

map <C-t><right> :bnext<cr>
map <C-t><left> :bprevious<cr>
"
" Copy pasting : use system clipboard for vim
set clipboard=unnamedplus

" Remapping <Space> to insert of one character
nnoremap <Space> i_<Esc>r

" Open new window to right and bottom
set splitbelow
set splitright

" Command to start editing a note from the Notes_dir directory
function! Concat(dir, file)
    let l:f_name = a:dir . "\/" . a:file
    execute "e " . l:f_name
endfunction

command! -nargs=1 En call Concat($NOTES_DIR, <f-args>)
"
"Max out the height of the current split
"ctrl + w _

"Max out the width of the current split
" ctrl + w |

" python-mode configuration

let g:pymode_indent = 0
let g:pymode_motion=0
let g:pymode_doc=0
let g:pymode_breakpoint=1
let g:pymode_lint=0
let g:pymode_rope=0
let g:pymode_syntax=0

" Set the clipboard in vim to the os clipboard
